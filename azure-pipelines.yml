trigger:
  batch: true
  branches:
    include:
      - "master"

variables:
  - group: "ESFA - SonarCloud"
  - name: sonarCloudProjectKey
    value: "SkillsFundingAgency_das-roatp-service"
  - name: buildConfiguration
    value: 'release'
  - name: buildPlatform
    value: 'anycpu'
  - group: 'BUILD Management Resources'

resources:
  repositories:
  - repository: self
  - repository: das-platform-building-blocks
    type: github
    name: SkillsFundingAgency/das-platform-building-blocks
    ref: refs/tags/3.0.8
    endpoint: SkillsFundingAgency

pool:
  name: 'DAS - Continuous Integration'
  demands: 
  - msbuild
  - visualstudio

steps:
- task: gittools.gitversion.gitversion-task.GitVersion@3
  displayName: GitVersion
  inputs:
    updateAssemblyInfo: true

- task: SonarCloudPrepare@1
  displayName: Prepare SonarCloud analysis configuration
  condition: and(succeeded(), or(in(variables['Build.SourceBranch'], 'refs/heads/master', 'refs/heads/main'), eq(variables['Build.Reason'], 'PullRequest')))
  inputs:
    SonarCloud: ESFA - SonarCloud
    organization: $(SonarCloudOrganisationKey)
    scannerMode: MSBuild
    projectName: "$(Build.DefinitionName)"
    projectKey: SkillsFundingAgency_das-roatp-service

- task: DotNetCoreCLI@2
  displayName: dot restore
  inputs:
    command: restore
    projects: 'src/**/*.csproj'
    noCache: true

- task: DotNetCoreCLI@2
  displayName: dotnet build
  inputs:
    projects: 'src/**/*.csproj'
    arguments: '--configuration $(buildConfiguration)  --no-restore'

- task: DotNetCoreCLI@2
  displayName: dotnet test
  inputs:
    command: test
    projects: '**/*.UnitTests.csproj'
    arguments: '--configuration $(buildConfiguration) --no-build'

- task: SonarCloudAnalyze@1
  displayName: Run SonarCloud analysis
  condition: and(succeeded(), or(in(variables['Build.SourceBranch'], 'refs/heads/master', 'refs/heads/main'), eq(variables['Build.Reason'], 'PullRequest')))

- task: SonarCloudPublish@1
  displayName: Publish SonarCloud analysis results on build summary
  condition: and(succeeded(), or(in(variables['Build.SourceBranch'], 'refs/heads/master', 'refs/heads/main'), eq(variables['Build.Reason'], 'PullRequest')))
  inputs:
    pollingTimeoutSec: '300'

- task: DotNetCoreCLI@2
  displayName: 'Publish Internal API'
  inputs:
    command: publish
    publishWebProjects: false
    projects: 'src\SFA.DAS.RoATPService.Application.Api\SFA.DAS.RoATPService.Application.Api.csproj'
    arguments: '--configuration $(buildConfiguration) --output $(build.artifactstagingdirectory)/publish --no-restore'


- task: VSBuild@1
  displayName: 'Build DACPAC'
  inputs:
    solution: 'src\SFA.DAS.RoATPService.Database\SFA.DAS.RoATPService.Database.sqlproj'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    msbuildArgs: '/p:PackageLocation="$(build.artifactstagingdirectory)/publish"'

- task: CopyFiles@2
  displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
  inputs:
    Contents: |
     azure\**
     src\**\*.dacpac
     config\**
    TargetFolder: '$(build.artifactstagingdirectory)/publish'
    OverWrite: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)/publish'